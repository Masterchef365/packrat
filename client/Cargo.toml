[package]
name = "client"
version = "0.1.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.76"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.28"
eframe = { version = "0.28", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
url = "2.5.2"
anyhow = "1"
common = { path = "../common" }

quic-session = { git = "https://github.com/Masterchef365/fckweb.git", branch = "main" }
framework = { git = "https://github.com/Masterchef365/fckweb.git", branch = "main" }
egui-shortcuts = { git = "https://github.com/Masterchef365/fckweb.git", branch = "main" }

poll-promise = { version = "0.3.0", features = ["tokio"] }
tokio = { version = "1.40", features = ["full"] }
env_logger = "0.10"

# # native:
# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# env_logger = "0.10"
# tokio = { version = "1.40", features = ["full"] }
# poll-promise = { git = "https://github.com/Masterchef365/poll-promise.git", branch = "wasm", features = ["tokio"] }
# 
# # web:
# [target.'cfg(target_arch = "wasm32")'.dependencies]
# wasm-bindgen-futures = "0.4"
# poll-promise = { git = "https://github.com/Masterchef365/poll-promise.git", branch = "wasm", features = ["web"] }

# to access the DOM (to hide the loading text)
#[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
# HACK: pin web-sys to <0.3.70 until a new `eframe` is released containing
# the following PR: https://github.com/emilk/egui/pull/4980
#version = ">= 0.3.4, < 0.3.70"

#[profile.release]
#opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
#[profile.dev.package."*"]
#opt-level = 2


#[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
